extends ./_layout

block title
  |Form

block content
  au-panel

    docs-section
      div(slot="desc")
        :markdown-it
          # Form
          支持表单验证，数据收集和提交操作。

          表单组件为`au-form`, 内部包含`au-form-item`表单项组件。

          ## 布局
          * 支持inline模式，默认不开启。通过`inline`属性控制。
          * 可以通过`label-width`和`label-position`控制label的显示。label有三种位置`left`、`top`、`right`。
          > inline模式下，请设置`label-position="top"`否则 label 与 控件 无法对齐。
      div(slot="code")

        h4 inline表单
        demo(style="margin-bottom: 5px")
          au-form(inline, label-position="top")
            au-form-item(label-width="100", label="姓名：")
              au-input(v-model="form.name", placeholder="请输入姓名")
            au-form-item(label-width="100", label="邮箱：")
              au-input(v-model="form.email", placeholder="请输入邮箱")
            au-form-item(label-width="100", label="性别：")
              au-radio-group(:options="[{value: '1', label: '男'}, {value: '2', label: '女'}]", v-model="form.gender")
            au-form-item(label-width="100", label="性别：")
              au-select(:options="[{value: '1', label: '三年一班'}, {value: '2', label: '三年二班'}]", v-model="form.class", placeholder="请选择班级")

        h4 label left 的表单
        demo(style="margin-bottom: 5px")
          // width:600px  控制表单宽度
          au-form(label-width="100", label-position="left", style="width:600px")
            au-form-item(label="姓名：")
              au-input(v-model="form.name", placeholder="请输入姓名")
            au-form-item(label="邮箱：")
              au-input(v-model="form.email", placeholder="请输入邮箱")
            au-form-item(label="性别：")
              au-radio-group(:options="[{value: '1', label: '男'}, {value: '2', label: '女'}]", v-model="form.gender")
            au-form-item(label-width="100", label="性别：")
              au-select(:options="[{value: '1', label: '三年一班'}, {value: '2', label: '三年二班'}]", v-model="form.class", placeholder="请选择班级")

        h4 label top 的表单
        demo(style="margin-bottom: 5px")
          au-form(label-width="100", label-position="top", style="width:600px")
            au-form-item(label="姓名：")
              au-input(v-model="form.name", placeholder="请输入姓名")
            au-form-item(label="邮箱：")
              au-input(v-model="form.email", placeholder="请输入邮箱")
            au-form-item(label="性别：")
              au-radio-group(:options="[{value: '1', label: '男'}, {value: '2', label: '女'}]", v-model="form.gender")
            au-form-item(label-width="100", label="性别：")
              au-select(:options="[{value: '1', label: '三年一班'}, {value: '2', label: '三年二班'}]", v-model="form.class", placeholder="请选择班级")

        h4 label right 的表单
        demo(style="margin-bottom: 5px")
          au-form(label-width="100", label-position="right", style="width:600px")
            au-form-item(label="姓名：")
              au-input(v-model="form.name", placeholder="请输入姓名")
            au-form-item(label="邮箱：")
              au-input(v-model="form.email", placeholder="请输入邮箱")
            au-form-item(label="性别：")
              au-radio-group(:options="[{value: '1', label: '男'}, {value: '2', label: '女'}]", v-model="form.gender")
            au-form-item(label-width="100", label="性别：")
              au-select(:options="[{value: '1', label: '三年一班'}, {value: '2', label: '三年二班'}]", v-model="form.class", placeholder="请选择班级")

    docs-section
      div(slot="desc")
        :markdown-it
          ## 表单验证
          要使用表单验证功能必须设置`model`和`rules`属性。
          * `model`属性用于表单项组件的数据获取，并在表单提交或表单验证错误时通过`submit`或`error`事件抛出。
            表单项组件`au-form-item`通过`prop`属性指定哪一个属性被验证，之后会通过`model`指定的表单数据来查找该数据进行验证。
          * `rules`属性可以在`au-form`组件和`au-form-item`上设置，如果两个组件内都进行了设置将共同生效。
            * `au-form`上的规则属性是一个(key, value)隐射表，key为表单项`prop`，value为验证规则**数组**。
            * `au-form-item`上的规则属性是验证规则**数组**。
      div(slot="code")
        h4 例子1
        demo
          au-form(style="width: 600px;", label-position="right", :label-width="100", :model="form", :rules="rules", @submit="onSubmit1", @error="onError")
            au-form-item(label="姓名", prop="name")
              au-input(v-model="form.name", placeholder="请输入姓名")
            au-form-item
              au-button(type="primary", native-type="submit")|提交
              |&nbsp;
              au-button(type="default", native-type="reset")|重置
          template(type="au-demo")
            script.
              //  针对name的验证规则
              var nameValidater = [  // 验证配置是一个数组，每一个元素是一种验证规则
                {
                  required: true,
                  message:'请输入姓名', // 验证不通过时的错误消息
                  whitespace: true     // whitespace:true 表示空格可通过验证 如： ' '算填写
                },
                {
                  validator: function(value, callback) {  // 可通过validator来进行自定义验证
                    if(value){
                      setTimeout(() => {
                        const result = value.match(/abc/) != null
                        console.log('validate', result)
                        callback(result)
                      }, 200)
                    } else {
                      callback(true);
                    }
                  },
                  message: '内容中需包含abc'
                }
              ];
              export default {
                data: {
                  form: {name: ''},
                  // 名称需要保持一致
                  rules: {
                    name: nameValidater  // 验证配置是一个数组，每一个元素是一种验证规则
                  }
                },
                methods: {
                  onSubmit1: function(data){
                    alert(data.name)
                  },
                  onError: function(data){
                    alert(`${data.name} is error`);
                  }
                }
              }

        h4 例子2
        demo
          au-form(style="width: 600px;", label-position="right", :label-width="100", :model="form", :rules="rules", @submit="onSubmit2")
            au-form-item(label="邮箱", prop="email", :rules="[{ required: true, message:'请输入邮箱' }, { type: 'email' }]")
              au-input(v-model="form.email", placeholder="请输入邮箱")
            au-form-item(label="描述", prop="desc")
              au-input(type="textarea", v-model="form.desc", rows="5", placeholder="最大8个字符")
            au-form-item
              au-button(type="primary", native-type="submit")|提交
              |&nbsp;
              au-button(type="default", native-type="reset")|重置
          template(type="au-demo")
            script.
              export default {
                data: {
                  form: {
                    desc: '',
                    email: '',
                  },
                  rules: {
                    desc: [
                      { required: true, message:'请输入描述' },
                      { max: 8, trigger: 'change, blur' }  // 当change blur时候出发验证
                    ]
                  }
                },
                methods: {
                  onSubmit2: function(data){
                    alert(data.desc);
                  }
                }
              }
    docs-section
      div(slot="desc")
        :markdown-it
          ## au-form
          ### 属性
          |      属性      |                                  说明                                  |      类型     | 默认值  |
          |----------------|------------------------------------------------------------------------|---------------|---------|
          | label-position | label位置，可选值`left`,`top`,`right`                                  | String        | 'right' |
          | label-width    | label宽度（px为单位）                                                  | String,Number |         |
          | inline         | 是否开启inline模式(如果开启，请同时设置`label-position="top"`)         | Boolean       | false   |
          | model          | 如果要使用表单验证，需要传入表单vm                                     | Object        |         |
          | rules          | 表单字段验证配置。 key要与`model`中的一直，value为数组包含多个验证规则 | Object        |         |

          ### 事件
          |  名称  |           说明           |
          |--------|--------------------------|
          | submit | 表单提交并验证通过后触发 |
          | error  | 表单提交并验证失败后触发 |
          ## au-form-item
          |      属性      |                  说明                 |      类型     | 默认值  |
          |----------------|---------------------------------------|---------------|---------|
          | label          | label名称                             | String        |         |
          | label-position | label位置，可选值`left`,`top`,`right` | String        | 'right' |
          | label-width    | label宽度（px为单位）                 | String,Number |         |
          | rules          | 单个(Object)或一组(Array)表单验证规则 | Array, Object |         |
          | props          | 对应字段名称(必须在model中包含)       | String        |         |
          ## 验证规则
          一个验证规则所包含的内容：
          ```json
            {
              trigger: 'event1, event2, ...',     // 验证以何种事件触发
              message: '',                        // 验证错误提示

              // 下面是组件自带验证规则 一个验证规则只能有一种验证方式，下方规则只能选择一种进行设置。

              // 自定义验证方法
              validator: function(){callback},    // callback(true)验证成功；callback(false)验证失败；

              // 必填
              required: true,                     // 是否必填
              whitespace: false,                  // 必填规则生效，空格是否可验证通过

              // 长度
              max: 10,                           // 字符长度需要小于的数字
              min: 1,                            // 字符长度需要大于的数字

              // 邮箱
              type: 'email',

              // 电话
              type: 'phone'                     // 1开头的11位数字
            }
          ```

block script
  script.
    new Vue({
      el: '#app',
      mixins,
      data () {
        return {
          labelPosition: 'left',
          labelWidth: '',
          form: {
            name: '',
            gender: '1',
            class: '',
            desc: '',
            email: '',
            confirm: false
          },
          attrs: [],
          rules: {
            name: [
              {
                required: true,
                message:'请输入姓名',
                whitespace: true
              },
              {
                validator: function(value, callback) {
                  if(value){
                    setTimeout(() => {
                      const result = value.match(/abc/) != null
                      console.log('validate', result)
                      callback(result)
                    }, 200)
                  } else {
                    callback(true);
                  }
                },
                message: '内容中需包含abc'
              }
            ],
            desc: [
              { required: true, message:'请输入描述' },
              { max: 8, trigger: 'change, blur' }
            ]
          }
        }
      },
      methods: {
        onSubmit1: function(data){
          alert(data.name);
        },
        onSubmit2: function(data){
          alert(data.desc);
        },
        onError: function(data){
          alert(`${data.name} is error`);
        }
      }
    })
